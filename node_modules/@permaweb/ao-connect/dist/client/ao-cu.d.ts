/**
 * @typedef Env3
 * @property {fetch} fetch
 * @property {string} CU_URL
 *
 * @typedef LoadResultArgs
 * @property {string} id - the id of the process being read
 *
 * @callback LoadResult
 * @param {LoadResultArgs} args
 * @returns {Promise<Record<string, any>}
 *
 * @param {Env3} env
 * @returns {LoadResult}
 */
export function loadResultWith({ fetch, CU_URL, logger }: Env3): LoadResult;
export type Env3 = {
    fetch: typeof globalThis.fetch;
    CU_URL: string;
};
export type LoadResultArgs = {
    /**
     * - the id of the process being read
     */
    id: string;
};
export type LoadResult = (args: LoadResultArgs) => Promise<Record<string, any>>;
